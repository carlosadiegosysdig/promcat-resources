apiVersion: v1
kind: ConfigMap
metadata:
  name: rules
  namespace: monitoring
data:
  rules.yaml: |-
    "groups":
    - "name": "Sysdig.k8s.general.rules"
      "rules":
      - "expr": up{job=~"kubernetes-nodes|kubernetes-apiservers"}
        "record": "up:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_resident_memory_bytes{job=~"kubernetes-nodes|kubernetes-apiservers"}
        "record": "process_resident_memory_bytes:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_cpu_seconds_total{job=~"kubernetes-nodes|kubernetes-apiservers"}
        "record": "process_cpu_seconds_total:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          go_goroutines{job=~"kubernetes-nodes|kubernetes-apiservers"}
        "record": "go_goroutines:kubernetes"
        "labels":
          "sysdig": "true"

    - "name": "Sysdig.k8s.kubelet.rules"
      "rules":
      - "expr": kubelet_running_pod_count{job="kubernetes-nodes"}
        "record": "kubelet_running_pod_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": kubelet_running_container_count{job="kubernetes-nodes"}
        "record": "kubelet_running_container_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": volume_manager_total_volumes{job="kubernetes-nodes"}
        "record": "volume_manager_total_volumes:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": volume_manager_total_volumes{job="kubernetes-nodes",state="desired_state_of_world"}
        "record": "volume_manager_total_volumes:desired:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": kubelet_node_config_error{job="kubernetes-nodes"}
        "record": "kubelet_node_config_error:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": kubelet_runtime_operations_total{job="kubernetes-nodes"}
        "record": "kubelet_runtime_operations_total:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": kubelet_runtime_operations_errors_total{job="kubernetes-nodes"}
        "record": "kubelet_runtime_operations_errors_total:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, operation_type, le)) 
        "record": "operation_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_pod_start_duration_seconds_count{job="kubernetes-nodes"}    
        "record": "kubelet_pod_start_duration_seconds_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_pod_worker_duration_seconds_count{job="kubernetes-nodes"}       
        "record": "kubelet_pod_worker_duration_seconds_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, le))
        "record": "pod_start_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, le))
        "record": "pod_worker_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          storage_operation_duration_seconds_count{job="kubernetes-nodes"}
        "record": "storage_operation_duration_seconds_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          storage_operation_errors_total{job="kubernetes-nodes"}
        "record": "storage_operation_errors_total:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, operation_name, volume_plugin, le))
        "record": "storage_operation_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_cgroup_manager_duration_seconds_count{job="kubernetes-nodes"}
        "record": "kubelet_cgroup_manager_duration_seconds_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, operation_type, le))
        "record": "cgroup_manager_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_pleg_relist_duration_seconds_count{job="kubernetes-nodes"}
        "record": "kubelet_pleg_relist_duration_seconds_count:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, le))
        "record": "pleg_relist_interval_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, le))
        "record": "pleg_relist_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          rest_client_requests_total{job="kubernetes-nodes",code=~"2.."}
        "record": "rest_client_requests_total_2code:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          rest_client_requests_total{job="kubernetes-nodes",code=~"3.."}
        "record": "rest_client_requests_total_3code:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          rest_client_requests_total{job="kubernetes-nodes",code=~"4.."}
        "record": "rest_client_requests_total_4code:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          rest_client_requests_total{job="kubernetes-nodes",code=~"5.."}
        "record": "rest_client_requests_total_5code:kubernetes_nodes"
        "labels":
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-nodes"}[5m])) by (instance, verb, url, le))
        "record": "request_duration_seconds:kubernetes_nodes"
        "labels":
          "sysdig": "true"

    - "name": "Sysdig.k8s.scheduler.rules"
      "rules":
      - "expr": up{job="kubernetes-kube-scheduler"}
        "record": "up:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": scheduler_e2e_scheduling_duration_seconds_count{job="kubernetes-kube-scheduler"}
        "record": "scheduler_e2e_scheduling_duration_seconds_count:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": scheduler_binding_duration_seconds_count{job="kubernetes-kube-scheduler"}
        "record": "scheduler_binding_duration_seconds_count:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": scheduler_scheduling_algorithm_duration_seconds_count{job="kubernetes-kube-scheduler"}
        "record": "scheduler_scheduling_algorithm_duration_seconds_count:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": scheduler_volume_scheduling_duration_seconds_count{job="kubernetes-kube-scheduler"}
        "record": "scheduler_volume_scheduling_duration_seconds_count:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kubernetes-kube-scheduler"}[5m])) by (instance, le))
        "record": "scheduler_volume_scheduling_duration_seconds_count:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kubernetes-kube-scheduler"}[5m])) by (instance, le))
        "record": "scheduler_binding_duration_seconds_bucket:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kubernetes-kube-scheduler"}[5m])) by (instance, le))
        "record": "scheduler_scheduling_algorithm_duration_seconds_bucket:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{job="kubernetes-kube-scheduler"}[5m])) by (instance, le))
        "record": "scheduler_volume_scheduling_duration_seconds_bucket:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-kube-scheduler"}[5m])) by (verb, url, le))
        "record": "rest_client_request_latency_seconds_bucket:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": rest_client_requests_total{job="kubernetes-kube-scheduler"}
        "record": "rest_client_requests_total:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_resident_memory_bytes{job="kubernetes-kube-scheduler"}
        "record": "process_resident_memory_bytes:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_cpu_seconds_total{job="kubernetes-kube-scheduler"}
        "record": "process_cpu_seconds_total:kube_scheduler"
        "labels":
          "sysdig": "true"
      - "expr": |
          go_goroutines{job="kubernetes-kube-scheduler"}
        "record": "go_goroutines:kube_scheduler"
        "labels":
          "sysdig": "true"
    
    - "name": "Sysdig.k8s.api.rules"
      "rules":
      - "expr": apiserver_request_total{job="kubernetes-apiservers"}
        "record": "apiserver_request_total:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers"}[5m])) by (verb, le))
        "record": "apiserver_request_duration_seconds_bucket:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": workqueue_adds_total{job="kubernetes-apiservers"}
        "record": "workqueue_adds_total:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": workqueue_depth{job="kubernetes-apiservers"}
        "record": "workqueue_depth:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job="kubernetes-apiservers"}[5m])) by (instance, name, le))
        "record": "workqueue_queue_duration_seconds_bucket:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": etcd_helper_cache_entry_total{job="kubernetes-apiservers"}
        "record": "etcd_helper_cache_entry_total:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": etcd_helper_cache_hit_total{job="kubernetes-apiservers"}
        "record": "etcd_helper_cache_hit_total:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": etcd_helper_cache_miss_total{job="kubernetes-apiservers"}
        "record": "etcd_helper_cache_miss_total:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99,sum(rate(etcd_request_cache_get_duration_seconds_bucket{job="kubernetes-apiservers"}[5m])) by (instance, le))
        "record": "etcd_request_cache_get_duration_seconds_bucket:kubernetes_apiservers"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99,sum(rate(etcd_request_cache_add_duration_seconds_bucket{job="kubernetes-apiservers"}[5m])) by (instance, le))
        "record": "etcd_request_cache_add_duration_seconds_bucket:kubernetes_apiservers"
        "labels":
          "sysdig": "true"

    - "name": "Sysdig.k8s.controller_manager.rules"
      "rules":
      - "expr": up{job="kubernetes-kube-controller-manager"}
        "record": "up:controllermanager"
        "labels":
          "sysdig": "true"
      - "expr": workqueue_adds_total{job="kubernetes-kube-controller-manager"}
        "record": "workqueue_adds_total:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": workqueue_depth{job="kubernetes-kube-controller-manager"}
        "record": "workqueue_depth:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job="kubernetes-kube-controller-manager"}[5m])) by (instance, name, le))
        "record": "workqueue_queue_duration_seconds_bucket:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-kube-controller-manager", verb="POST"}[5m])) by (verb, url, le))
        "record": "rest_client_request_latency_seconds_bucket:kubernetes_control_manager:post"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-kube-controller-manager", verb="GET"}[5m])) by (verb, url, le))
        "record": "rest_client_request_latency_seconds_bucket:kubernetes_control_manager:get"
        "labels":
          "sysdig": "true"
      - "expr": rest_client_requests_total{job="kubernetes-kube-controller-manager"}
        "record": "rest_client_requests_total:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_resident_memory_bytes{job="kubernetes-kube-controller-manager"}
        "record": "process_resident_memory_bytes:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_cpu_seconds_total{job="kubernetes-kube-controller-manager"}
        "record": "process_cpu_seconds_total:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
      - "expr": |
          go_goroutines{job="kubernetes-kube-controller-manager"}
        "record": "go_goroutines:kubernetes_control_manager"
        "labels":
          "sysdig": "true"
    
    - "name": "Sysdig.k8s.kube_proxy.rules"
      "rules":
      - "expr": up{job="kubernetes-kube-proxy"}
        "record": "up:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr" : kubeproxy_sync_proxy_rules_duration_seconds_count{job="kubernetes-kube-proxy"}
        "record": "kubeproxy_sync_proxy_rules_duration_seconds_count:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr" : histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{job="kubernetes-kube-proxy"}[5m]))
        "record": "kubeproxy_sync_proxy_rules_duration_seconds_bucket:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr" : kubeproxy_network_programming_duration_seconds_count{job="kubernetes-kube-proxy"}
        "record": "kubeproxy_network_programming_duration_seconds_count:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr" : histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{job="kubernetes-kube-proxy"}[5m])) by (instance, le))
        "record": "kubeproxy_network_programming_duration_seconds_bucket:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": rest_client_requests_total{job="kubernetes-kube-proxy"}
        "record": "rest_client_requests_total:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-kube-proxy",verb="POST"}[5m])) by (verb, url, le))
        "record": "rest_client_request_latency_seconds_bucket:post:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job="kubernetes-kube-proxy",verb="GET"}[5m])) by (verb, url, le))
        "record": "rest_client_request_latency_seconds_bucket:get:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_resident_memory_bytes{job="kubernetes-kube-proxy"}
        "record": "process_resident_memory_bytes:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_cpu_seconds_total{job="kubernetes-kube-proxy"}
        "record": "process_cpu_seconds_total:kube_proxy"
        "labels":
          "sysdig": "true"
      - "expr": |
          go_goroutines{job="kubernetes-kube-proxy"}
        "record": "go_goroutines:kube_proxy"
        "labels":
          "sysdig": "true"
    - name: "Sysdig.k8s.alert.rules"
      "rules":
      - "expr": |
          sum by (namespace) (
              sum by (namespace, pod) (
                  max by (namespace, pod, container) (
                      kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"}
                  ) * on(namespace, pod) group_left() max by (namespace, pod) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        "record": "namespace:kube_pod_container_resource_requests_cpu_cores:sum"
        "labels":
          "sysdig": "true"
      - "expr": | 
          kube_node_status_allocatable_cpu_cores
        "record": "kube_node_status_allocatable_cpu_cores:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          sum by (namespace) (
              sum by (namespace, pod) (
                  max by (namespace, pod, container) (
                      kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}
                  ) * on(namespace, pod) group_left() max by (namespace, pod) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        "record": "namespace:kube_pod_container_resource_requests_memory_bytes:sum"
        "labels":
          "sysdig": "true"
      - "expr": |
          kube_node_status_allocatable_memory_bytes
        "record": kube_node_status_allocatable_memory_bytes:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          kube_resourcequota
        "record": kube_resourcequota:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          container_cpu_cfs_throttled_periods_total
        "record": container_cpu_cfs_throttled_periods_total:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          container_cpu_cfs_periods_total
        "record": container_cpu_cfs_periods_total:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_volume_stats_available_bytes
        "record": kubelet_volume_stats_available_bytes:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          kubelet_volume_stats_capacity_bytes
        "record": kubelet_volume_stats_capacity_bytes:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          kube_persistentvolume_status_phase
        "record": kube_persistentvolume_status_phase:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          kubernetes_build_info{job!~"kube-dns|coredns"}
        "record": kubernetes_build_info:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
        "record": rest_client_requests_total:5xx:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          sum(rate(rest_client_requests_total[5m])) by (instance, job)
        "record": rest_client_requests_total:sysdig
        "labels":
          "sysdig": "true"
      - "expr": |
          sum(status_class:apiserver_request_total:rate1h{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate1h{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate1h"
      - "expr": |
          sum(status_class:apiserver_request_total:rate5m{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate5m{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate5m"
      - "expr": |
          sum(status_class:apiserver_request_total:rate6h{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate6h{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate6h"
      - "expr": |
          sum(status_class:apiserver_request_total:rate30m{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate30m{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate30m"
      - "expr": |
          sum(status_class:apiserver_request_total:rate1d{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate1d{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate1d"
      - "expr": |
          sum(status_class:apiserver_request_total:rate2h{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate2h{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate2h"
      - "expr": |
          sum(status_class:apiserver_request_total:rate3d{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate3d{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate3d"
      - "expr": |
          sum(status_class:apiserver_request_total:rate6h{job="kube-apiserver",status_class="5xx"})
          /
          sum(status_class:apiserver_request_total:rate6h{job="kube-apiserver"})
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
        "record": "status_class_5xx:apiserver_request_total:ratio_rate6h"
      - "expr": |
          sum(rate(apiserver_request_duration_seconds_sum{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
          /
          sum(rate(apiserver_request_duration_seconds_count{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
        "record": "cluster:apiserver_request_duration_seconds:mean5m"
        "labels":
          "job": "kube-apiserver"
          "sysdig": "true"
      - "expr": |
          histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.99"
          "sysdig": "true"
        "record": "apiserver_client_certificate_expiration_seconds_count"
      - "expr": |
          apiserver_client_certificate_expiration_seconds_count
        "labels":
          "sysdig": "true"
        "record": apiserver_client_certificate_expiration_seconds_count:sysdig
      - "expr": |
          apiserver_client_certificate_expiration_seconds_bucket
        "labels":
          "sysdig": "true"
        "record": apiserver_client_certificate_expiration_seconds_bucket:sysdig
      - "expr": |
          aggregator_unavailable_apiservice_count
        "labels":
          "sysdig": "true"
        "record": aggregator_unavailable_apiservice_count:sysdig
      - "expr": |
          aggregator_unavailable_apiservice
        "labels":
          "sysdig": "true"
        "record": aggregator_unavailable_apiservice:sysdig
      - "expr": |
          kube_node_status_condition
        "labels":
          "sysdig": "true"
        "record": kube_node_status_condition:sysdig
      - "expr": |
          kube_node_spec_taint
        "labels":
          "sysdig": "true"
        "record": kube_node_spec_taint:sysdig
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet"})
        "labels":
          "quantile": "0.99"
          "sysdig": "true"
        "record": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
      - "expr": |
          kubelet_node_name
        "labels":
          "sysdig": "true"
        "record": kubelet_node_name:sysdig
    - "name": "Sysdig.k8s.etcd.rules"
      "rules":
      - "expr": up{job=~"etcd"}
        "record": "up:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_resident_memory_bytes{job=~"etcd"}
        "record": "process_resident_memory_bytes:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          process_cpu_seconds_total{job=~"etcd"}
        "record": "process_cpu_seconds_total:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          go_goroutines{job=~"etcd"}
        "record": "go_goroutines:kubernetes"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_server_has_leader
        "record": "etcd_server_has_leader:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_server_leader_changes_seen_total
        "record": "etcd_server_leader_changes_seen_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          grpc_server_started_total
        "record": "grpc_server_started_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          grpc_server_handled_total
        "record": "grpc_server_handled_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          grpc_server_handling_seconds_bucket
        "record": "grpc_server_handling_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_network_peer_round_trip_time_seconds_bucket
        "record": "etcd_network_peer_round_trip_time_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_debugging_mvcc_db_total_size_in_bytes
        "record": "etcd_debugging_mvcc_db_total_size_in_bytes:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_disk_wal_fsync_duration_seconds_bucket
        "record": "etcd_disk_wal_fsync_duration_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_disk_backend_commit_duration_seconds_bucket
        "record": "etcd_disk_backend_commit_duration_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_http_failed_total
        "record": "etcd_http_failed_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_http_successful_duration_seconds_bucket
        "record": "etcd_http_successful_duration_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          etcd_network_client_grpc_received_bytes_total
        "record": "etcd_network_client_grpc_received_bytes_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_network_client_grpc_sent_bytes_total
        "record": "etcd_network_client_grpc_sent_bytes_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_network_client_grpc_sent_bytes_total
        "record": "etcd_network_client_grpc_sent_bytes_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_server_proposals_failed_total
        "record": "etcd_server_proposals_failed_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_server_proposals_committed_total
        "record": "etcd_server_proposals_committed_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_server_proposals_applied_total
        "record": "etcd_server_proposals_applied_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": | 
          etcd_network_peer_sent_failures_total
        "record": "etcd_network_peer_sent_failures_total:sysdig"
        "labels":
          "sysdig": "true"
    - "name": "Sysdig.k8s.dns.rules"
      "rules":
      - "expr": |
          coredns_panic_count_total
        "record": "coredns_panic_count_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_dns_response_rcode_count_total
        "record": "coredns_dns_response_rcode_count_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_forward_response_rcode_count_total
        "record": "coredns_forward_response_rcode_count_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_dns_request_duration_seconds_bucket
        "record": "coredns_dns_request_duration_seconds_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_dns_request_type_count_total
        "record": "coredns_dns_request_type_count_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_forward_request_count_total
        "record": "coredns_forward_request_count_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_cache_hits_total
        "record": "coredns_cache_hits_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_cache_misses_total
        "record": "coredns_cache_misses_total:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_cache_size
        "record": "coredns_cache_size:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_plugin_enabled
        "record": "coredns_plugin_enabled:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_dns_request_size_bytes_bucket
        "record": "coredns_dns_request_size_bytes_bucket:sysdig"
        "labels":
          "sysdig": "true"
      - "expr": |
          coredns_dns_response_size_bytes_bucket
        "record": "coredns_dns_response_size_bytes_bucket:sysdig"
        "labels":
          "sysdig": "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /opt/rules/rules.yaml
    - /opt/alerts/alerts.yaml
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - honor_labels: true
      job_name: prometheus-pushgateway
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - action: keep
        regex: pushgateway
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
    - job_name: kubernetes-kube-controller-manager
      honor_labels: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        separator: '/'
        regex: 'kube-system/kube-controller-manager.+'
      - source_labels:
        - __address__
        action: replace
        target_label: __address__
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10252
      - source_labels:
        - __meta_kubernetes_pod_name
        action: replace
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    - job_name: kubernetes-kube-scheduler
      honor_labels: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        separator: '/'
        regex: 'kube-system/kube-scheduler.+'
      - source_labels:
        - __address__
        action: replace
        target_label: __address__
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10251
      - source_labels:
        - __meta_kubernetes_pod_name
        action: replace
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    - job_name: kube-state-metrics
      honor_labels: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        separator: '/'
        regex: 'monitoring/prometheus-kube-state-metrics.+'
      - source_labels:
        - __address__
        action: replace
        target_label: __address__
        regex: (.+?)(\\:\\d+)?
        replacement: $1
      - source_labels:
        - __meta_kubernetes_pod_name
        action: replace
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    - job_name: kubernetes-kube-proxy
      honor_labels: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        separator: '/'
        regex: 'kube-system/kube-proxy.+'
      - source_labels:
        - __address__
        action: replace
        target_label: __address__
        regex: (.+?)(\\:\\d+)?
        replacement: $1:10249
      - source_labels:
        - __meta_kubernetes_pod_name
        action: replace
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
    - job_name: etcd
      scheme: https
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_name
        separator: '/'
        regex: 'kube-system/etcd-manager-main.+'
      - source_labels:
        - __address__
        action: replace
        target_label: __address__
        regex: (.+?)(\\:\\d)?
        replacement: $1:4001
      tls_config:
        insecure_skip_verify: true
        cert_file: /opt/draios/kubernetes/prometheus/secrets/ca.crt
        key_file: /opt/draios/kubernetes/prometheus/secrets/ca.key
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus
    chart: prometheus-11.0.0
    component: server
    heritage: Helm
    release: prometheus
  name: prometheus-server
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
      component: server
      release: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: prometheus
        chart: prometheus-11.0.0
        component: server
        heritage: Helm
        release: prometheus
    spec:
      containers:
      - args:
        - --volume-dir=/etc/config
        - --webhook-url=http://127.0.0.1:9090/-/reload
        image: jimmidyson/configmap-reload:v0.3.0
        imagePullPolicy: IfNotPresent
        name: prometheus-server-configmap-reload
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
        - mountPath: /opt/rules
          name: config-rules
          readOnly: true
        - mountPath: /opt/alerts
          name: config-alerts
          readOnly: true
      - args:
        - --storage.tsdb.retention.time=15d
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        image: prom/prometheus:v2.16.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: prometheus-server
        ports:
        - containerPort: 9090
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/draios/kubernetes/prometheus/secrets
          name: etcd-ca
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /opt/rules
          name: config-rules
        - mountPath: /opt/alerts
          name: config-alerts
        - mountPath: /data
          name: storage-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: prometheus-server
      serviceAccountName: prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
      - name: etcd-ca
        secret:
          defaultMode: 420
          secretName: etcd-ca
      - configMap:
          defaultMode: 420
          name: prometheus-server
        name: config-volume
      - configMap:
          defaultMode: 420
          name: rules
        name: rules
      - name: storage-volume
        persistentVolumeClaim:
          claimName: prometheus-server